"use strict";var _=require("underscore");module.exports=function(e){var t="*";e.ACL=function(t){var s=this;if(s.permissionsById={},_.isObject(t))if(t instanceof e.User)s.setReadAccess(t,!0),s.setWriteAccess(t,!0);else{if(_.isFunction(t))throw"AV.ACL() called with a function.  Did you forget ()?";e._objectEach(t,function(t,i){if(!_.isString(i))throw"Tried to create an ACL with an invalid userId.";s.permissionsById[i]={},e._objectEach(t,function(e,t){if("read"!==t&&"write"!==t)throw"Tried to create an ACL with an invalid permission type.";if(!_.isBoolean(e))throw"Tried to create an ACL with an invalid permission value.";s.permissionsById[i][t]=e})})}},e.ACL.prototype.toJSON=function(){return _.clone(this.permissionsById)},e.ACL.prototype._setAccess=function(t,s,i){if(s instanceof e.User?s=s.id:s instanceof e.Role&&(s="role:"+s.getName()),!_.isString(s))throw"userId must be a string.";if(!_.isBoolean(i))throw"allowed must be either true or false.";var o=this.permissionsById[s];if(!o){if(!i)return;o={},this.permissionsById[s]=o}i?this.permissionsById[s][t]=!0:(delete o[t],_.isEmpty(o)&&delete o[s])},e.ACL.prototype._getAccess=function(t,s){s instanceof e.User?s=s.id:s instanceof e.Role&&(s="role:"+s.getName());var i=this.permissionsById[s];return i?!!i[t]:!1},e.ACL.prototype.setReadAccess=function(e,t){this._setAccess("read",e,t)},e.ACL.prototype.getReadAccess=function(e){return this._getAccess("read",e)},e.ACL.prototype.setWriteAccess=function(e,t){this._setAccess("write",e,t)},e.ACL.prototype.getWriteAccess=function(e){return this._getAccess("write",e)},e.ACL.prototype.setPublicReadAccess=function(e){this.setReadAccess(t,e)},e.ACL.prototype.getPublicReadAccess=function(){return this.getReadAccess(t)},e.ACL.prototype.setPublicWriteAccess=function(e){this.setWriteAccess(t,e)},e.ACL.prototype.getPublicWriteAccess=function(){return this.getWriteAccess(t)},e.ACL.prototype.getRoleReadAccess=function(t){if(t instanceof e.Role&&(t=t.getName()),_.isString(t))return this.getReadAccess("role:"+t);throw"role must be a AV.Role or a String"},e.ACL.prototype.getRoleWriteAccess=function(t){if(t instanceof e.Role&&(t=t.getName()),_.isString(t))return this.getWriteAccess("role:"+t);throw"role must be a AV.Role or a String"},e.ACL.prototype.setRoleReadAccess=function(t,s){if(t instanceof e.Role&&(t=t.getName()),_.isString(t))return void this.setReadAccess("role:"+t,s);throw"role must be a AV.Role or a String"},e.ACL.prototype.setRoleWriteAccess=function(t,s){if(t instanceof e.Role&&(t=t.getName()),_.isString(t))return void this.setWriteAccess("role:"+t,s);throw"role must be a AV.Role or a String"}};