"use strict";var _=require("underscore");module.exports=function(e){e.Role=e.Object.extend("_Role",{constructor:function(t,r){if(_.isString(t)?(e.Object.prototype.constructor.call(this,null,null),this.setName(t)):e.Object.prototype.constructor.call(this,t,r),void 0===r){var n=new e.ACL;n.setPublicReadAccess(!0),this.getACL()||this.setACL(n)}else{if(!(r instanceof e.ACL))throw new TypeError("acl must be an instance of AV.ACL");this.setACL(r)}},getName:function(){return this.get("name")},setName:function(e,t){return this.set("name",e,t)},getUsers:function(){return this.relation("users")},getRoles:function(){return this.relation("roles")},validate:function(t,r){if("name"in t&&t.name!==this.getName()){var n=t.name;if(this.id&&this.id!==t.objectId)return new e.Error(e.Error.OTHER_CAUSE,"A role's name can only be set before it has been saved.");if(!_.isString(n))return new e.Error(e.Error.OTHER_CAUSE,"A role's name must be a String.");if(!/^[0-9a-zA-Z\-_ ]+$/.test(n))return new e.Error(e.Error.OTHER_CAUSE,"A role's name can only contain alphanumeric characters, _, -, and spaces.")}return e.Object.prototype.validate?e.Object.prototype.validate.call(this,t,r):!1}})};